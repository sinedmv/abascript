//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\raybe\abascript\AbaScript\AbaScript\AbaScript.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AbaScript {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AbaScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IAbaScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="AbaScriptParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] AbaScriptParser.AndExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="AbaScriptParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] AbaScriptParser.OrExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ConditionExpr</c>
	/// labeled alternative in <see cref="AbaScriptParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionExpr([NotNull] AbaScriptParser.ConditionExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="AbaScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSub([NotNull] AbaScriptParser.AddSubContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TermExpr</c>
	/// labeled alternative in <see cref="AbaScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermExpr([NotNull] AbaScriptParser.TermExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>MulDivMod</c>
	/// labeled alternative in <see cref="AbaScriptParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivMod([NotNull] AbaScriptParser.MulDivModContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>FactorTerm</c>
	/// labeled alternative in <see cref="AbaScriptParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactorTerm([NotNull] AbaScriptParser.FactorTermContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="AbaScriptParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParens([NotNull] AbaScriptParser.ParensContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="AbaScriptParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] AbaScriptParser.NumberContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="AbaScriptParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] AbaScriptParser.StringContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="AbaScriptParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] AbaScriptParser.VariableContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionCall</c>
	/// labeled alternative in <see cref="AbaScriptParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] AbaScriptParser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScript([NotNull] AbaScriptParser.ScriptContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] AbaScriptParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] AbaScriptParser.VariableDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] AbaScriptParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.inputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputStatement([NotNull] AbaScriptParser.InputStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.outputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputStatement([NotNull] AbaScriptParser.OutputStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] AbaScriptParser.ReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] AbaScriptParser.IfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] AbaScriptParser.WhileStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] AbaScriptParser.ForStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.functionDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDef([NotNull] AbaScriptParser.FunctionDefContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.funcCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncCall([NotNull] AbaScriptParser.FuncCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] AbaScriptParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.logicalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpr([NotNull] AbaScriptParser.LogicalExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] AbaScriptParser.ConditionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.comparisonOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOp([NotNull] AbaScriptParser.ComparisonOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] AbaScriptParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] AbaScriptParser.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] AbaScriptParser.FactorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] AbaScriptParser.BreakStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbaScriptParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] AbaScriptParser.ContinueStatementContext context);
}
} // namespace AbaScript
