//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\raybe\abascript\AbaScript\AbaScript\AbaScript.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AbaScript {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class AbaScriptLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, ID=31, NUMBER=32, 
		STRING=33, WS=34, COMMENT=35;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "ID", "NUMBER", "STRING", 
		"WS", "COMMENT"
	};


	public AbaScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'var'", "'='", "'input'", "'('", "')'", "'print'", "'return'", 
		"'if'", "'elif'", "'else'", "'while'", "'for'", "'func'", "','", "'{'", 
		"'}'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'break'", "'continue'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "ID", "NUMBER", "STRING", "WS", 
		"COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AbaScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2%\xD8\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3"+
		"\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3"+
		"\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3"+
		"\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3"+
		"\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3"+
		"\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3"+
		"\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \a \xB6\n \f \xE"+
		" \xB9\v \x3!\x6!\xBC\n!\r!\xE!\xBD\x3\"\x3\"\a\"\xC2\n\"\f\"\xE\"\xC5"+
		"\v\"\x3\"\x3\"\x3#\x6#\xCA\n#\r#\xE#\xCB\x3#\x3#\x3$\x3$\a$\xD2\n$\f$"+
		"\xE$\xD5\v$\x3$\x3$\x2\x2\x2%\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a"+
		"\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF"+
		"\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17"+
		"-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E"+
		";\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%\x3\x2\b\x5\x2\x43\\\x61"+
		"\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3\x2\x32;\x3\x2$$\x5\x2\v\f\xF"+
		"\xF\"\"\x4\x2\f\f\xF\xF\xDC\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2"+
		"\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/"+
		"\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x3I\x3\x2\x2\x2\x5K\x3\x2\x2\x2\aO\x3\x2\x2\x2\tQ"+
		"\x3\x2\x2\x2\vW\x3\x2\x2\x2\rY\x3\x2\x2\x2\xF[\x3\x2\x2\x2\x11\x61\x3"+
		"\x2\x2\x2\x13h\x3\x2\x2\x2\x15k\x3\x2\x2\x2\x17p\x3\x2\x2\x2\x19u\x3\x2"+
		"\x2\x2\x1B{\x3\x2\x2\x2\x1D\x7F\x3\x2\x2\x2\x1F\x84\x3\x2\x2\x2!\x86\x3"+
		"\x2\x2\x2#\x88\x3\x2\x2\x2%\x8A\x3\x2\x2\x2\'\x8D\x3\x2\x2\x2)\x90\x3"+
		"\x2\x2\x2+\x92\x3\x2\x2\x2-\x95\x3\x2\x2\x2/\x97\x3\x2\x2\x2\x31\x9A\x3"+
		"\x2\x2\x2\x33\x9C\x3\x2\x2\x2\x35\x9E\x3\x2\x2\x2\x37\xA0\x3\x2\x2\x2"+
		"\x39\xA2\x3\x2\x2\x2;\xA4\x3\x2\x2\x2=\xAA\x3\x2\x2\x2?\xB3\x3\x2\x2\x2"+
		"\x41\xBB\x3\x2\x2\x2\x43\xBF\x3\x2\x2\x2\x45\xC9\x3\x2\x2\x2G\xCF\x3\x2"+
		"\x2\x2IJ\a=\x2\x2J\x4\x3\x2\x2\x2KL\ax\x2\x2LM\a\x63\x2\x2MN\at\x2\x2"+
		"N\x6\x3\x2\x2\x2OP\a?\x2\x2P\b\x3\x2\x2\x2QR\ak\x2\x2RS\ap\x2\x2ST\ar"+
		"\x2\x2TU\aw\x2\x2UV\av\x2\x2V\n\x3\x2\x2\x2WX\a*\x2\x2X\f\x3\x2\x2\x2"+
		"YZ\a+\x2\x2Z\xE\x3\x2\x2\x2[\\\ar\x2\x2\\]\at\x2\x2]^\ak\x2\x2^_\ap\x2"+
		"\x2_`\av\x2\x2`\x10\x3\x2\x2\x2\x61\x62\at\x2\x2\x62\x63\ag\x2\x2\x63"+
		"\x64\av\x2\x2\x64\x65\aw\x2\x2\x65\x66\at\x2\x2\x66g\ap\x2\x2g\x12\x3"+
		"\x2\x2\x2hi\ak\x2\x2ij\ah\x2\x2j\x14\x3\x2\x2\x2kl\ag\x2\x2lm\an\x2\x2"+
		"mn\ak\x2\x2no\ah\x2\x2o\x16\x3\x2\x2\x2pq\ag\x2\x2qr\an\x2\x2rs\au\x2"+
		"\x2st\ag\x2\x2t\x18\x3\x2\x2\x2uv\ay\x2\x2vw\aj\x2\x2wx\ak\x2\x2xy\an"+
		"\x2\x2yz\ag\x2\x2z\x1A\x3\x2\x2\x2{|\ah\x2\x2|}\aq\x2\x2}~\at\x2\x2~\x1C"+
		"\x3\x2\x2\x2\x7F\x80\ah\x2\x2\x80\x81\aw\x2\x2\x81\x82\ap\x2\x2\x82\x83"+
		"\a\x65\x2\x2\x83\x1E\x3\x2\x2\x2\x84\x85\a.\x2\x2\x85 \x3\x2\x2\x2\x86"+
		"\x87\a}\x2\x2\x87\"\x3\x2\x2\x2\x88\x89\a\x7F\x2\x2\x89$\x3\x2\x2\x2\x8A"+
		"\x8B\a?\x2\x2\x8B\x8C\a?\x2\x2\x8C&\x3\x2\x2\x2\x8D\x8E\a#\x2\x2\x8E\x8F"+
		"\a?\x2\x2\x8F(\x3\x2\x2\x2\x90\x91\a>\x2\x2\x91*\x3\x2\x2\x2\x92\x93\a"+
		">\x2\x2\x93\x94\a?\x2\x2\x94,\x3\x2\x2\x2\x95\x96\a@\x2\x2\x96.\x3\x2"+
		"\x2\x2\x97\x98\a@\x2\x2\x98\x99\a?\x2\x2\x99\x30\x3\x2\x2\x2\x9A\x9B\a"+
		"-\x2\x2\x9B\x32\x3\x2\x2\x2\x9C\x9D\a/\x2\x2\x9D\x34\x3\x2\x2\x2\x9E\x9F"+
		"\a,\x2\x2\x9F\x36\x3\x2\x2\x2\xA0\xA1\a\x31\x2\x2\xA1\x38\x3\x2\x2\x2"+
		"\xA2\xA3\a\'\x2\x2\xA3:\x3\x2\x2\x2\xA4\xA5\a\x64\x2\x2\xA5\xA6\at\x2"+
		"\x2\xA6\xA7\ag\x2\x2\xA7\xA8\a\x63\x2\x2\xA8\xA9\am\x2\x2\xA9<\x3\x2\x2"+
		"\x2\xAA\xAB\a\x65\x2\x2\xAB\xAC\aq\x2\x2\xAC\xAD\ap\x2\x2\xAD\xAE\av\x2"+
		"\x2\xAE\xAF\ak\x2\x2\xAF\xB0\ap\x2\x2\xB0\xB1\aw\x2\x2\xB1\xB2\ag\x2\x2"+
		"\xB2>\x3\x2\x2\x2\xB3\xB7\t\x2\x2\x2\xB4\xB6\t\x3\x2\x2\xB5\xB4\x3\x2"+
		"\x2\x2\xB6\xB9\x3\x2\x2\x2\xB7\xB5\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8"+
		"@\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2\xBA\xBC\t\x4\x2\x2\xBB\xBA\x3\x2\x2"+
		"\x2\xBC\xBD\x3\x2\x2\x2\xBD\xBB\x3\x2\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE\x42"+
		"\x3\x2\x2\x2\xBF\xC3\a$\x2\x2\xC0\xC2\n\x5\x2\x2\xC1\xC0\x3\x2\x2\x2\xC2"+
		"\xC5\x3\x2\x2\x2\xC3\xC1\x3\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\xC6\x3\x2"+
		"\x2\x2\xC5\xC3\x3\x2\x2\x2\xC6\xC7\a$\x2\x2\xC7\x44\x3\x2\x2\x2\xC8\xCA"+
		"\t\x6\x2\x2\xC9\xC8\x3\x2\x2\x2\xCA\xCB\x3\x2\x2\x2\xCB\xC9\x3\x2\x2\x2"+
		"\xCB\xCC\x3\x2\x2\x2\xCC\xCD\x3\x2\x2\x2\xCD\xCE\b#\x2\x2\xCE\x46\x3\x2"+
		"\x2\x2\xCF\xD3\a%\x2\x2\xD0\xD2\n\a\x2\x2\xD1\xD0\x3\x2\x2\x2\xD2\xD5"+
		"\x3\x2\x2\x2\xD3\xD1\x3\x2\x2\x2\xD3\xD4\x3\x2\x2\x2\xD4\xD6\x3\x2\x2"+
		"\x2\xD5\xD3\x3\x2\x2\x2\xD6\xD7\b$\x2\x2\xD7H\x3\x2\x2\x2\b\x2\xB7\xBD"+
		"\xC3\xCB\xD3\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AbaScript
